<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Controllino Test</title>
  <link rel="stylesheet" href="css/style.css">
</head>
<body>

    <a href="index.html" class="navbutt" >Startsida</a>
    <button class="connectbutt" id="connect">Manual Connect</button>

    <center><h2>Controllino Test.    VARNING: Tänk på skarpa anslutningar kan aktiveras!</h2></center>

  <button id="disconnect">Disconnect</button>
  <input type="text" id="sendid" name="sendname" placeholder="enter message here">
  <button id="send">Send</button>
  <input type="text" id="recid" name="recname" placeholder="received here">
  <br>

 

  <span id="a0">A0</span><button class="tbutt" onclick="s(0,1)">D0 on</button><span id="d0">0</span><button class="tbutt" onclick="s(0,0)">D0 off</button>
  <input type="text" id="counter0id"><br>
  <span id="a1">A1</span><button class="tbutt" onclick="s(1,1)">D1 on</button><span id="d1">0</span><button class="tbutt" onclick="s(1,0)">D1 off</button>
  <input type="text" id="counter1id"><br>
  <span id="a2">A2</span><button class="tbutt" onclick="s(2,1)">D2 on</button><span id="d2">0</span><button class="tbutt" onclick="s(2,0)">D2 off</button>
  <input type="text" id="counter2id"><br>
  <span id="a3">A3</span><button class="tbutt" onclick="s(3,1)">D3 on</button><span id="d3">0</span><button class="tbutt" onclick="s(3,0)">D3 off</button>
  <input type="text" id="counter3id"><br>
  <span id="a4">A4</span><button class="tbutt" onclick="s(4,1)">D4 on</button><span id="d4">0</span><button class="tbutt" onclick="s(4,0)">D4 off</button>
  <input type="text" id="counter4id"><br>
  <span id="a5">A5</span><button class="tbutt" onclick="s(5,1)">D5 on</button><span id="d5">0</span><button class="tbutt" onclick="s(5,0)">D5 off</button>
  <input type="text" id="counter5id"><br>
  <span id="a6">A6</span><button class="tbutt" onclick="s(6,1)">D6 on</button><span id="d6">0</span><button class="tbutt" onclick="s(6,0)">D6 off</button>
  <input type="text" id="counter6id"><br>
  <span id="a7">A7</span><button class="tbutt" onclick="s(7,1)">D7 on</button><span id="d7">0</span><button class="tbutt" onclick="s(7,0)">D7 off</button>
  <input type="text" id="counter7id"><br>
  
    <pre class="outputpre" id="output"></pre>

  <script src="js/SerialPort.js"></script>
  <script src="js/Util.js"></script>

  <script>

/*    function showBuffer (v) {
            output.textContent += v+'\n';
    }*/
    function showLogg (v) {
      const totalHeight = output.clientHeight;
      if (totalHeight>650) output.textContent="";
            output.textContent += v+'\n';
    }

    function recCallback (v) {
      // logg(10,"recCallback:"+v);
      recid.value=v;
      ArduinoParse(v);
      counter0id.value=spCounters[0];
      counter1id.value=spCounters[1];
      counter2id.value=spCounters[2];
      counter3id.value=spCounters[3];
      counter4id.value=spTest;

      a0.textContent=spAinputs[0];
      a1.textContent=spAinputs[1];
      a2.textContent=spAinputs[2];
      a3.textContent=spAinputs[3];
      a4.textContent=spAinputs[4];
      a5.textContent=spAinputs[5];
      a6.textContent=spAinputs[6];
      a7.textContent=spAinputs[7];

      d0.textContent=spDoutputs[0];
      d1.textContent=spDoutputs[1];
      d2.textContent=spDoutputs[2];
      d3.textContent=spDoutputs[3];
      d4.textContent=spDoutputs[4];
      d5.textContent=spDoutputs[5];
      d6.textContent=spDoutputs[6];
      d7.textContent=spDoutputs[7];
/*
      let s;
      let p1;
      recid.value=v;
      s=v.substring(0,2);
      if (s=="#a") {
        p1=v.indexOf("v");
        s=v.substring(p1+1);
        counter0id.value=parseInt(s);
        p1=v.indexOf("w");
        s=v.substring(p1+1);
        counter1id.value=parseInt(s);
      }
      if (s=="#A") {
        p1=v.indexOf("V");
        s=v.substring(p1+1);
        counter0id.value=parseInt(s);
        p1=v.indexOf("W");
        s=v.substring(p1+1);
        counter1id.value=parseInt(s);
        
      }*/
    }

    function s(n,v) {
        let msg={};
        msg.command="setDigital";
        msg.pinnumber=n;
        msg.pinvalue=v;
        sendup(msg);
    }

/*
    document.getElementById('sd01').addEventListener('click', s(0,1) ); document.getElementById('sd00').addEventListener('click', s(0,0) );
    document.getElementById('sd11').addEventListener('click', s(1,1) ); document.getElementById('sd10').addEventListener('click', s(1,0) );
    document.getElementById('sd21').addEventListener('click', s(2,1) ); document.getElementById('sd20').addEventListener('click', s(2,0) );

    document.getElementById('sd31').addEventListener('click', s(3,1) ); document.getElementById('sd30').addEventListener('click', s(3,0) );
    document.getElementById('sd41').addEventListener('click', s(4,1) ); document.getElementById('sd40').addEventListener('click', s(4,0) );
    document.getElementById('sd51').addEventListener('click', s(5,1) ); document.getElementById('sd50').addEventListener('click', s(5,0) );
    document.getElementById('sd61').addEventListener('click', s(6,1) ); document.getElementById('sd60').addEventListener('click', s(6,0) );
    document.getElementById('sd71').addEventListener('click', s(7,1) ); document.getElementById('sd70').addEventListener('click', s(7,0) );

    document.getElementById('sda1').addEventListener('click', setDa1 ); document.getElementById('sda0').addEventListener('click', setDa0 );

    document.getElementById('buttStatus').addEventListener('click',  async () => {
       // sendReceivePort("$S00");
       sendtoPort("$s00");
    });


    document.getElementById('sp40').addEventListener('click',  async () => {
       setD41();
       await delay(200);
       setD40();
    });

    document.getElementById('hatch1').addEventListener('click',  async () => { openHatch(1); });
*/ 
    document.getElementById('connect').addEventListener('click', connectPort );
    document.getElementById('disconnect').addEventListener('click', disconnectPort );
    document.getElementById('send').addEventListener('click', async () => {
    try {
      var inputElement = document.getElementById("sendid");
      var inputValue = inputElement.value;
      // await sendReceivePort(inputValue);
      await sendReceivePort(inputValue);
    } catch (err) {
            reportStatus('Error:'+err);
            console.error('Error:', err);
        }
    });

   // Listen for messages from the parent page
   window.addEventListener('message', function(event) {
      // Check the origin of the message for security reasons
      // if (event.origin !== 'http://your-parent-domain.com') { return;}
      try {
        recobj = JSON.parse(event.data);
        if ('io' in recobj) {         // io inkommen
            recCallback(recobj.io);
        }
      } catch (error) {
        console.log('Error parsing JSON:'+error.message);
      }
      // event.source.postMessage("Ok", event.origin); // Return channel
  });

// readLoop();

  </script>
</body>
</html>
