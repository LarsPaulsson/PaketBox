<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Controllino Test</title>
  <link rel="stylesheet" href="css/style.css">
</head>
<body>

    <a href="index.html" class="navbutt" >Startsida</a>
    <button class="connectbutt" id="connect">Manual Connect</button>

    <center><h2>Controllino Test.    VARNING: Tänk på skarpa anslutningar kan aktiveras!</h2></center>

  <button id="disconnect">Disconnect</button>
  <input type="text" id="sendid" name="sendname" placeholder="enter message here">
  <button id="send">Send</button>
  <input type="text" id="recid" name="recname" placeholder="received here">
  <br>

  
  <span id="a0">A0</span><button class="tbutt" id="sd01">D0 on</button><span id="d0">0</span><button class="tbutt" id="sd00">D0 off</button>
  <button class="tbutt" id="buttStatus">Status</button><input type="text" id="counter4id"><br>
  <span id="a1">A1</span><button class="tbutt" id="sd11">D1 on</button><span id="d1">0</span><button class="tbutt" id="sd10">D1 off</button>
  <button class="tbutt" id="butt2">-</button><input type="text" id="counterxxid"><br>
  <span id="a2">A2</span><button class="tbutt" id="sd21">D2 on</button><span id="d2">0</span><button class="tbutt" id="sd20">D2 off</button>
  <button class="tbutt" id="butt3">-</button><input type="text" id="counter2id"><br>
  <span id="a3">A3</span><button class="tbutt" id="sd31">D3 on</button><span id="d3">0</span><button class="tbutt" id="sd30">D3 off</button>
  <button class="tbutt" id="butt4">-</button><input type="text" id="counter3id"><br>
  <span id="a4">A4</span><button class="tbutt" id="sd41">D4 on</button><span id="d4">0</span><button class="tbutt" id="sd40">D4 off</button>
  <button class="tbutt" id="sp40">D4 pulse</button><input type="text" id="counterxxxid"><br>
  <span id="a5">A5</span><button class="tbutt" id="sd51">D5 on</button><span id="d5">0</span><button class="tbutt" id="sd50">D5 off</button>
  <button class="tbutt" id="butt4">-</button><input type="text" id="counterxyid"><br>
  <span id="a6">A6</span><button class="tbutt" id="sd61">D6 on</button><span id="d6">0</span><button class="tbutt" id="sd60">D6 off</button>
  <button class="tbutt" id="butt4">-</button><input type="text" id="counter0id"><br>
  <span id="a7">A7</span><button class="tbutt" id="sd71">D7 on</button><span id="d7">0</span><button class="tbutt" id="sd70">D7 off</button>
  <button class="tbutt" id="hatch1">D7 on+D4 pulse</button><input type="text" id="counter1id"><br>
  <span id="ax">--</span><button class="tbutt" id="sda1">ALL on</button><span id="dx">-</span><button class="tbutt" id="sda0">ALL off</button><br>
 
  <pre class="outputpre" id="output"></pre>

  <script src="js/SerialPort.js"></script>
  <script>

/*    function showBuffer (v) {
            output.textContent += v+'\n';
    }*/
    function showLogg (v) {
      const totalHeight = output.clientHeight;
      if (totalHeight>650) output.textContent="";
            output.textContent += v+'\n';
    }

    function recCallback (v) {
      recid.value=v;
      ArduinoParse(v);
      counter0id.value=spCounters[0];
      counter1id.value=spCounters[1];
      counter2id.value=spCounters[2];
      counter3id.value=spCounters[3];
      counter4id.value=spTest;

      a0.textContent=spAinputs[0];
      a1.textContent=spAinputs[1];
      a2.textContent=spAinputs[2];
      a3.textContent=spAinputs[3];
      a4.textContent=spAinputs[4];
      a5.textContent=spAinputs[5];
      a6.textContent=spAinputs[6];
      a7.textContent=spAinputs[7];

      d0.textContent=spDoutputs[0];
      d1.textContent=spDoutputs[1];
      d2.textContent=spDoutputs[2];
      d3.textContent=spDoutputs[3];
      d4.textContent=spDoutputs[4];
      d5.textContent=spDoutputs[5];
      d6.textContent=spDoutputs[6];
      d7.textContent=spDoutputs[7];
/*
      let s;
      let p1;
      recid.value=v;
      s=v.substring(0,2);
      if (s=="#a") {
        p1=v.indexOf("v");
        s=v.substring(p1+1);
        counter0id.value=parseInt(s);
        p1=v.indexOf("w");
        s=v.substring(p1+1);
        counter1id.value=parseInt(s);
      }
      if (s=="#A") {
        p1=v.indexOf("V");
        s=v.substring(p1+1);
        counter0id.value=parseInt(s);
        p1=v.indexOf("W");
        s=v.substring(p1+1);
        counter1id.value=parseInt(s);
        
      }*/
    }

    document.getElementById('sd01').addEventListener('click', setD01 ); document.getElementById('sd00').addEventListener('click', setD00 );
    document.getElementById('sd11').addEventListener('click', setD11 ); document.getElementById('sd10').addEventListener('click', setD10 );
    document.getElementById('sd21').addEventListener('click', setD21 ); document.getElementById('sd20').addEventListener('click', setD20 );
    document.getElementById('sd31').addEventListener('click', setD31 ); document.getElementById('sd30').addEventListener('click', setD30 );
    document.getElementById('sd41').addEventListener('click', setD41 ); document.getElementById('sd40').addEventListener('click', setD40 );
    document.getElementById('sd51').addEventListener('click', setD51 ); document.getElementById('sd50').addEventListener('click', setD50 );
    document.getElementById('sd61').addEventListener('click', setD61 ); document.getElementById('sd60').addEventListener('click', setD60 );
    document.getElementById('sd71').addEventListener('click', async () => {setDigital(7,1) });

    document.getElementById('sd70').addEventListener('click', async () => {setDigital(7,0) });
    document.getElementById('sda1').addEventListener('click', setDa1 ); document.getElementById('sda0').addEventListener('click', setDa0 );

    document.getElementById('buttStatus').addEventListener('click',  async () => {
       // sendReceivePort("$S00");
       sendtoPort("$s00");
    });


    document.getElementById('sp40').addEventListener('click',  async () => {
       setD41();
       await delay(200);
       setD40();
    });

    document.getElementById('hatch1').addEventListener('click',  async () => { openHatch(1); });
 
    document.getElementById('connect').addEventListener('click', connectPort );
    document.getElementById('disconnect').addEventListener('click', disconnectPort );
    document.getElementById('send').addEventListener('click', async () => {
    try {
      var inputElement = document.getElementById("sendid");
      var inputValue = inputElement.value;
      // await sendReceivePort(inputValue);
      await sendReceivePort(inputValue);
    } catch (err) {
            reportStatus('Error:'+err);
            console.error('Error:', err);
        }
    });


readLoop();

  </script>
</body>
</html>
